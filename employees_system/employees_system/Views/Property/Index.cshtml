@model IEnumerable<employees_system.ViewModels.Properties.ShowPropertyViewModel>

@{
    ViewData["Title"] = "Property Management";
}

<div class="container-fluid">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">
                <i class="fas fa-cogs text-info me-2"></i>Property Management
            </h2>
            <p class="text-muted mb-0">Configure custom properties for employee profiles</p>
        </div>
        <div class="btn-group" role="group">
            <a asp-action="NewProperty" class="btn btn-primary btn-lg">
                <i class="fas fa-plus me-2"></i>Add Property
            </a>
            <a asp-controller="Employee" asp-action="Index" class="btn btn-outline-success btn-lg">
                <i class="fas fa-users me-2"></i>Back to Employees
            </a>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body text-center">
                    <i class="fas fa-list fa-2x mb-2"></i>
                    <h4 class="mb-0">@Model.Count()</h4>
                    <small>Total Properties</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body text-center">
                    <i class="fas fa-exclamation-circle fa-2x mb-2"></i>
                    <h4 class="mb-0">@Model.Count(p => p.Required == "True" || p.Required == "true")</h4>
                    <small>Required Properties</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body text-center">
                    <i class="fas fa-list-ul fa-2x mb-2"></i>
                    <h4 class="mb-0">@Model.Count(p => p.Type == "Dropdown")</h4>
                    <small>Dropdown Properties</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body text-center">
                    <i class="fas fa-font fa-2x mb-2"></i>
                    <h4 class="mb-0">@Model.Count(p => p.Type != "Dropdown")</h4>
                    <small>Input Properties</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Properties Table -->
    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <h5 class="card-title mb-0">
                <i class="fas fa-table me-2"></i>All Properties
            </h5>
        </div>
        <div class="card-body p-0">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th scope="col">
                                    <i class="fas fa-tag me-1"></i>@Html.DisplayNameFor(model => model.Name)
                                </th>
                                <th scope="col">
                                    <i class="fas fa-list me-1"></i>@Html.DisplayNameFor(model => model.Type)
                                </th>
                                <th scope="col">
                                    <i class="fas fa-exclamation-circle me-1"></i>@Html.DisplayNameFor(model => model.Required)
                                </th>
                                <th scope="col">
                                    <i class="fas fa-list-ul me-1"></i>@Html.DisplayNameFor(model => model.options)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="fw-semibold">
                                        @switch (item.Type.ToLower())
                                        {
                                            case "string":
                                                <i class="fas fa-font text-primary me-2"></i>
                                                break;
                                            case "integer":
                                                <i class="fas fa-hashtag text-success me-2"></i>
                                                break;
                                            case "date":
                                                <i class="fas fa-calendar text-info me-2"></i>
                                                break;
                                            case "dropdown":
                                                <i class="fas fa-list text-warning me-2"></i>
                                                break;
                                            default:
                                                <i class="fas fa-question text-muted me-2"></i>
                                                break;
                                        }
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        <span class="badge bg-@(item.Type.ToLower() switch 
                                        {
                                            "string" => "primary",
                                            "integer" => "success", 
                                            "date" => "info",
                                            "dropdown" => "warning",
                                            _ => "secondary"
                                        })">
                                            @Html.DisplayFor(modelItem => item.Type)
                                        </span>
                                    </td>
                                    <td>
                                        @if (item.Required == "true" || item.Required == "True")
                                        {
                                            <span class="badge bg-danger">
                                                <i class="fas fa-exclamation-circle me-1"></i>Required
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">
                                                <i class="fas fa-circle me-1"></i>Optional
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.options))
                                        {
                                            <span class="text-muted small">@Html.DisplayFor(modelItem => item.options)</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted fst-italic">N/A</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-cogs fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No properties configured</h5>
                    <p class="text-muted">Create custom properties to enhance employee profiles with additional information.</p>
                    <a asp-action="NewProperty" class="btn btn-primary btn-lg">
                        <i class="fas fa-plus me-2"></i>Create First Property
                    </a>
                </div>
            }
        </div>
    </div>
</div>
