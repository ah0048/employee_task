@using employees_system.Models.Enums
@model employees_system.ViewModels.Properties.CreatePropertyViewModel

@{
    ViewData["Title"] = "AddNewProperty";
}

<h1>Add New Property</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddNewProperty">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select asp-for="Type" class="form-control" asp-items="Html.GetEnumSelectList<PropertyType>()"></select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    Is Required
                    <input class="form-check-input" asp-for="IsRequired" />
                </label>
            </div>
            <div class="form-group" id="dropdownOptionsGroup" style="display:none;">
                <label asp-for="DropdownOptionsCommaSeparated" class="control-label">Drop down Options Comma Separated</label>
                <input asp-for="DropdownOptionsCommaSeparated" class="form-control" placeholder="eg: option1, option2" />
                <span asp-validation-for="DropdownOptionsCommaSeparated" class="text-danger"></span>
            <p>Note: any duplicate or empty options will be disregarded</p>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const typeSelect = document.getElementById("Type");
        const dropdownOptionsGroup = document.getElementById("dropdownOptionsGroup");

        function toggleDropdownOptions() {
            if (typeSelect.value === "3" || typeSelect.value === "Dropdown") {
                dropdownOptionsGroup.style.display = "block";
            } else {
                dropdownOptionsGroup.style.display = "none";
            }
        }

        typeSelect.addEventListener("change", toggleDropdownOptions);
        toggleDropdownOptions();
    </script>
}
