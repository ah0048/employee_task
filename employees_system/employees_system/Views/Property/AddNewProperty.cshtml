@using employees_system.Models.Enums
@model employees_system.ViewModels.Properties.CreatePropertyViewModel

@{
    ViewData["Title"] = "Add New Property";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-10">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title mb-0">
                        <i class="fas fa-plus-circle me-2"></i>Add New Property
                    </h3>
                </div>
                <div class="card-body">
                    <form asp-action="AddNewProperty">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                        
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label fw-semibold">
                                <i class="fas fa-tag me-1"></i>Property Name
                            </label>
                            <input asp-for="Name" class="form-control form-control-lg" placeholder="Enter property name..." />
                            <span asp-validation-for="Name" class="text-danger small"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Type" class="form-label fw-semibold">
                                <i class="fas fa-list me-1"></i>Property Type
                            </label>
                            <select asp-for="Type" class="form-select form-select-lg" asp-items="Html.GetEnumSelectList<PropertyType>()">
                                <option value="">-- Select Property Type --</option>
                            </select>
                            <span asp-validation-for="Type" class="text-danger small"></span>
                        </div>

                        <div class="mb-3">
                            <div class="form-check form-switch">
                                <input class="form-check-input" asp-for="IsRequired" type="checkbox" role="switch">
                                <label class="form-check-label fw-semibold" asp-for="IsRequired">
                                    <i class="fas fa-exclamation-circle me-1"></i>Is Required
                                </label>
                            </div>
                            <small class="text-muted">Toggle this option to make the property mandatory for employees</small>
                        </div>

                        <div class="mb-3" id="dropdownOptionsGroup" style="display:none;">
                            <label asp-for="DropdownOptionsCommaSeparated" class="form-label fw-semibold">
                                <i class="fas fa-list-ul me-1"></i>Dropdown Options
                            </label>
                            <input asp-for="DropdownOptionsCommaSeparated" class="form-control" 
                                   placeholder="Enter options separated by commas (e.g., Option1, Option2, Option3)" />
                            <span asp-validation-for="DropdownOptionsCommaSeparated" class="text-danger small"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Separate multiple options with commas. Duplicate or empty options will be removed automatically.
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a asp-action="Index" class="btn btn-outline-secondary btn-lg me-md-2">
                                <i class="fas fa-arrow-left me-1"></i>Cancel
                            </a>
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-save me-1"></i>Create Property
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const typeSelect = document.getElementById("Type");
        const dropdownOptionsGroup = document.getElementById("dropdownOptionsGroup");

        function toggleDropdownOptions() {
            if (typeSelect.value === "3" || typeSelect.value === "Dropdown") {
                dropdownOptionsGroup.style.display = "block";
            } else {
                dropdownOptionsGroup.style.display = "none";
            }
        }

        typeSelect.addEventListener("change", toggleDropdownOptions);
        toggleDropdownOptions();
    </script>
}
