@model employees_system.ViewModels.Employees.CreateEmployeeViewModel
@using employees_system.Models.Enums
@using employees_system.ViewModels.Properties
@{
    ViewData["Title"] = "Add New Employee";
    var defs = (IEnumerable<PropertyDefinitionViewModel>)ViewBag.PropertyDefinitions ?? Enumerable.Empty<PropertyDefinitionViewModel>();
    var defsList = defs.ToList();
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10 col-sm-12">
            <div class="card shadow-sm">
                <div class="card-header bg-success text-white">
                    <h3 class="card-title mb-0">
                        <i class="fas fa-user-plus me-2"></i>Add New Employee
                    </h3>
                </div>
                <div class="card-body">
                    <form asp-action="AddNewEmployee">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                        
                        <!-- Basic Employee Information Section -->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Code" class="form-label fw-semibold">
                                        <i class="fas fa-id-card me-1"></i>Employee Code
                                        <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="Code" class="form-control form-control-lg" required 
                                           placeholder="Enter unique employee code..." />
                                    <span asp-validation-for="Code" class="text-danger small"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Name" class="form-label fw-semibold">
                                        <i class="fas fa-user me-1"></i>Employee Name
                                        <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="Name" class="form-control form-control-lg" required 
                                           placeholder="Enter employee full name..." />
                                    <span asp-validation-for="Name" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>

                        @if (defsList.Any())
                        {
                            <!-- Custom Properties Section -->
                            <hr class="my-4">
                            <h5 class="mb-3 text-muted">
                                <i class="fas fa-cogs me-2"></i>Additional Properties
                            </h5>
                            
                            <div class="row">
                                @for (int i = 0; i < defsList.Count; i++)
                                {
                                    var def = defsList[i];
                                    <div class="col-md-6 mb-3">
                                        <div class="form-group">
                                            <label class="form-label fw-semibold">
                                                @switch (def.Type)
                                                {
                                                    case PropertyType.String:
                                                        <i class="fas fa-font me-1"></i>
                                                        break;
                                                    case PropertyType.Integer:
                                                        <i class="fas fa-hashtag me-1"></i>
                                                        break;
                                                    case PropertyType.Date:
                                                        <i class="fas fa-calendar me-1"></i>
                                                        break;
                                                    case PropertyType.Dropdown:
                                                        <i class="fas fa-list me-1"></i>
                                                        break;
                                                }
                                                @def.Name
                                                @if (def.IsRequired)
                                                {
                                                    <span class="text-danger">*</span>
                                                }
                                            </label>

                                            <input type="hidden" name="Properties[@i].PropertyDefinitionId" value="@def.Id" />

                                            @switch (def.Type)
                                            {
                                                case PropertyType.String:
                                                    <input name="Properties[@i].Value" type="text" 
                                                           @(def.IsRequired ? "required" : "") 
                                                           class="form-control" 
                                                           placeholder="Enter @def.Name.ToLower()..." />
                                                    break;

                                                case PropertyType.Integer:
                                                    <input name="Properties[@i].Value" type="number" 
                                                           @(def.IsRequired ? "required" : "") 
                                                           class="form-control" 
                                                           placeholder="Enter numeric value..." />
                                                    break;

                                                case PropertyType.Date:
                                                    <input name="Properties[@i].Value" type="date" 
                                                           @(def.IsRequired ? "required" : "") 
                                                           class="form-control" />
                                                    break;

                                                case PropertyType.Dropdown:
                                                    <select name="Properties[@i].Value" 
                                                            @(def.IsRequired ? "required" : "") 
                                                            class="form-select">
                                                        <option value="">-- Select @def.Name --</option>
                                                        @foreach (var opt in def.Options)
                                                        {
                                                            <option value="@opt">@opt</option>
                                                        }
                                                    </select>
                                                    break;

                                                default:
                                                    <input name="Properties[@i].Value" type="text" 
                                                           class="form-control" 
                                                           placeholder="Enter value..." />
                                                    break;
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info" role="alert">
                                <i class="fas fa-info-circle me-2"></i>
                                No additional properties have been defined yet. 
                                <a asp-controller="Property" asp-action="NewProperty" class="alert-link">Create some properties</a> 
                                to enhance employee profiles.
                            </div>
                        }

                        <hr class="my-4">
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a asp-action="Index" class="btn btn-outline-secondary btn-lg me-md-2">
                                <i class="fas fa-arrow-left me-1"></i>Cancel
                            </a>
                            <button type="submit" class="btn btn-success btn-lg">
                                <i class="fas fa-user-plus me-1"></i>Create Employee
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
